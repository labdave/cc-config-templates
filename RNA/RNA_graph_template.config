[utils_concatfastq__rna]
    module      = Utils
    submodule   = ConcatFastq

[utils_consolidatesamplename__rna]
    module      = Utils
    submodule   = ConsolidateSampleName

[gatk_bedtointervallist__ontarget__rna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_bed
        ref             = ref

[gatk_bedtointervallist__ontargetexome__rna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_exonic_bed
        ref             = ref

####################### RNA Section
[fastqc__raw__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = utils_concatfastq__rna

    final_output    = R1_fastqc, R2_fastqc

[trimmomatic__rna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    input_from      = utils_concatfastq__rna

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

[fastqc__trim__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__rna

    final_output    = R1_fastqc, R2_fastqc

[utils_getreadgroup__rna]
    module          = Utils
    submodule       = GetReadGroup

    input_from      = trimmomatic__rna, utils_consolidatesamplename__rna

[bowtie2__rna]
    module = Bowtie2
    docker_image = bowtie2

    input_from = trimmomatic__rna

    final_output = bam, R1, R2

    [[args]]
        ref = rrna_ref

[fastqc__bowtie2__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = bowtie2__rna

    final_output    = R1_fastqc, R2_fastqc

        [[args]]
            mem     = 12

[samtools_index__bowtie2__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = bowtie2__rna

    final_output    = bam_idx

[star__rna]
    module          = Star
    docker_image    = star

    input_from      = bowtie2__rna, utils_getreadgroup__rna

    final_output    = transcriptome_mapped_bam, raw_read_counts, final_log

    [[args]]
        ref     = star_ref

[samtools_index__star__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = star__rna

    final_output    = bam_idx

[picard_markduplicates__rna]
    module          = Picard
    submodule       = MarkDuplicates
    docker_image    = picard

    input_from      = star__rna, samtools_index__star__rna

    final_output    = bam

[samtools_index__picard_markduplicates__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = picard_markduplicates__rna

    final_output    = bam_idx

[rsem__rna]
    module          = RSEM
    docker_image    = rsem

    input_from      = star__rna

    final_output    = isoforms_results, genes_results

[utils_getreadnames__spliced__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = read_names

    [[args]]
        spliced_reads = True

[gatk_filtersamreads__spliced__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced__rna, picard_markduplicates__rna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[samtools_index__gatk_filtersamreads__spliced__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced__rna

    final_output    = bam_idx

[utils_getreadnames__spliced_exonic_captured__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__spliced__rna

    final_output    = read_names

    [[args]]
        bed         = abcgcbscore_target_exonic_bed

[gatk_filtersamreads__spliced_exonic_captured__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced_exonic_captured__rna, gatk_filtersamreads__spliced__rna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[samtools_index__gatk_filtersamreads__spliced_exonic_captured__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced_exonic_captured__rna

    final_output    = bam_idx

[utils_getreadnames__spliced_exonic__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__spliced__rna

    final_output    = read_names

    [[args]]
        bed         = abcgcbscore_exonic_bed

[gatk_filtersamreads__spliced_exonic__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced_exonic__rna, gatk_filtersamreads__spliced__rna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[samtools_index__gatk_filtersamreads__spliced_exonic__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced_exonic__rna

    final_output    = bam_idx

[utils_getreadnames__exonic_captured__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = read_names

    [[args]]
        bed         = abcgcbscore_target_exonic_bed

[gatk_filtersamreads__exonic_captured__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__exonic_captured__rna, picard_markduplicates__rna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[samtools_index__gatk_filtersamreads__exonic_captured__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__exonic_captured__rna

    final_output    = bam_idx

[utils_getreadnames__exonic__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = read_names

    [[args]]
        bed         = abcgcbscore_exonic_bed

[gatk_filtersamreads__exonic__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__exonic__rna, picard_markduplicates__rna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[samtools_index__gatk_filtersamreads__exonic__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__exonic__rna

    final_output    = bam_idx

[bedtools_coverage__original__rna]
    module          = Bedtools
    submodule       = Coverage
    docker_image    = bedsam

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = read_counts

    [[args]]
        count_reads = True
        bed         = abcgcbscore_target_gene_bed

[abcgcbscore__original__rna]
    module          = ABCGCBScore
    docker_image    = abc_gcb_score

    input_from      = bedtools_coverage__original__rna

    final_output    = abc_gcb_score, normalized_gene_counts

    [[args]]
        ref         = abc_gcb_genes
        sample_type = original

[bedtools_coverage__exonicoverlap__rna]
    module          = Bedtools
    submodule       = Coverage
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__exonic__rna, samtools_index__gatk_filtersamreads__exonic__rna

    final_output    = read_counts

    [[args]]
        count_reads = True
        bed         = abcgcbscore_target_gene_bed

[abcgcbscore__exonicoverlap__rna]
    module          = ABCGCBScore
    docker_image    = abc_gcb_score

    input_from      = bedtools_coverage__exonicoverlap__rna

    final_output    = abc_gcb_score, normalized_gene_counts

    [[args]]
        ref         = abc_gcb_genes
        sample_type = exonicoverlap

[bedtools_coverage__capturedexonicoverlap__rna]
    module          = Bedtools
    submodule       = Coverage
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__exonic_captured__rna, samtools_index__gatk_filtersamreads__exonic_captured__rna

    final_output    = read_counts

    [[args]]
        count_reads = True
        bed         = abcgcbscore_target_gene_bed

[abcgcbscore__capturedexonicoverlap__rna]
    module          = ABCGCBScore
    docker_image    = abc_gcb_score

    input_from      = bedtools_coverage__capturedexonicoverlap__rna

    final_output    = abc_gcb_score, normalized_gene_counts

    [[args]]
        ref         = abc_gcb_genes
        sample_type = capturedexonicoverlap

[bedtools_coverage__spliced__rna]
    module          = Bedtools
    submodule       = Coverage
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__spliced__rna, samtools_index__gatk_filtersamreads__spliced__rna

    final_output    = read_counts

    [[args]]
        count_reads = True
        bed         = abcgcbscore_target_gene_bed

[abcgcbscore__spliced__rna]
    module          = ABCGCBScore
    docker_image    = abc_gcb_score

    input_from      = bedtools_coverage__spliced__rna

    final_output    = abc_gcb_score, normalized_gene_counts

    [[args]]
        ref         = abc_gcb_genes
        sample_type = spliced

[bedtools_coverage__spliced_exonicoverlap__rna]
    module          = Bedtools
    submodule       = Coverage
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__spliced_exonic__rna,samtools_index__gatk_filtersamreads__spliced_exonic__rna

    final_output    = read_counts

    [[args]]
        count_reads = True
        bed         = abcgcbscore_target_gene_bed

[abcgcbscore__spliced_exonicoverlap__rna]
    module          = ABCGCBScore
    docker_image    = abc_gcb_score

    input_from      = bedtools_coverage__spliced_exonicoverlap__rna

    final_output    = abc_gcb_score, normalized_gene_counts

    [[args]]
        ref         = abc_gcb_genes
        sample_type = spliced_exonicoverlap

[bedtools_coverage__spliced_capturedexonicoverlap__rna]
    module          = Bedtools
    submodule       = Coverage
    docker_image    = bedsam

    input_from      = gatk_filtersamreads__spliced_exonic_captured__rna, samtools_index__gatk_filtersamreads__spliced_exonic_captured__rna

    final_output    = read_counts

    [[args]]
        count_reads = True
        bed         = abcgcbscore_target_gene_bed

[abcgcbscore__spliced_capturedexonicoverlap__rna]
    module          = ABCGCBScore
    docker_image    = abc_gcb_score

    input_from      = bedtools_coverage__spliced_capturedexonicoverlap__rna

    final_output    = abc_gcb_score, normalized_gene_counts

    [[args]]
        ref         = abc_gcb_genes
        sample_type = spliced_capturedexonicoverlap

[mergernaseq_aggregaterawreadcounts__rna]
    module          = MergeRNAseq
    submodule       = AggregateRawReadCounts
    docker_image    = aggregate_raw_read_counts

    input_from      = star__rna, utils_consolidatesamplename__rna

[mergernaseq_aggregatersemresults__rna]
    module          = MergeRNAseq
    submodule       = AggregateRSEMResults
    docker_image    = aggregate_rsem_results

    input_from      = rsem__rna, utils_consolidatesamplename__rna

[utils_combineexpressionwithmetadata__rawcounts__rna]
    module          = Utils
    submodule       = CombineExpressionWithMetadata
    docker_image    = combine_exp_gene_name

    input_from      = mergernaseq_aggregaterawreadcounts__rna

    final_output    = annotated_expression_file

    [[args]]
        result_type = "rawcounts"

[utils_combineexpressionwithmetadata__rsem__rna]
    module          = Utils
    submodule       = CombineExpressionWithMetadata
    docker_image    = combine_exp_gene_name

    input_from      = mergernaseq_aggregatersemresults__rna

    final_output    = annotated_expression_file

    [[args]]
        result_type = "rsem"

###### RNA Section QC
[samtools_flagstat__bowtie2__rna]
    module          = Samtools
    submodule       = Flagstat
    docker_image    = samtools

    input_from      = bowtie2__rna, samtools_index__bowtie2__rna

    final_output    = flagstat

[samtools_flagstat__rna]
    module          = Samtools
    submodule       = Flagstat
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = flagstat

[picard_collectinsertsizematrics__rna]
    module          = Picard
    submodule       = CollectInsertSizeMetrics
    docker_image    = picard

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = insert_size_report, insert_size_histogram

[samtools_view__countreads__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__countreads__bowtie2__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = bowtie2__rna, samtools_index__bowtie2__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__exonoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = exonic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intronoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = intron_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intergenicoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = intergenic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__utroverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = utr_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__mirnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = mirna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__rrnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = rrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__lincrnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = lincrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__ontargetoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = target_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[gatk_depthofcoverage__ontargetcoverage__rna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3
    input_from   = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna, gatk_bedtointervallist__ontarget__rna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx
        nr_cpus      = 16
        mem          = 64

[gatk_depthofcoverage__ontargetexoncoverage__rna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3
    input_from   = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna, gatk_bedtointervallist__ontargetexome__rna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx
        nr_cpus      = 16
        mem          = 64

###### RNA Section QCParser
[qcparser_fastqc__rawfastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__raw__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna fastqc report parsing for raw fastqs"

[qcparser_fastqc__trimfastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__trim__rna, utils_consolidatesamplename__rna

    [[args]]
    note = "rna fastqc report parsing for trimmed fastqs"

[qcparser_fastqc__bowtie2fastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__bowtie2__rna, utils_consolidatesamplename__rna

  [[args]]
    note = "rna bowtie2 fastqc report parsing"

[qcparser_trimmomatic__rna]
    module          = QCParser
    submodule       = Trimmomatic
    docker_image    = qcparser

    input_from      = trimmomatic__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna trimmomatic summary report parsing"

[qcparser_samtoolsflagstat__bowtie2__rna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__bowtie2__rna

    [[args]]
        note = "rna bowtie2 alignment summary report parsing"

[qcparser_samtoolsflagstat__rna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna star alignment summary report parsing"

[qcparser_picardinsertsizematrics__rna]
    module          = QCParser
    submodule       = PicardInsertMetrics
    docker_image    = qcparser

    input_from      = picard_collectinsertsizematrics__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna picard insert size summary report parsing"

[qcparser_samtoolscountreads__bowtie2__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__bowtie2__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna read counts mapped to the rrna reference"

[qcparser_samtoolscountreads__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna read counts mapped to the genome"

[qcparser_samtoolscountreads__ontarget__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__ontargetoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna on target read counts mapped to the genome"

[qcparser_samtoolscountreads__exon__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__exonoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna exon read counts mapped to the genome"

[qcparser_samtoolscountreads__intron__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intronoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna intron read counts mapped to the genome"

[qcparser_samtoolscountreads__intergenic__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intergenicoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna intergenic read counts mapped to the genome"

[qcparser_samtoolscountreads__utr__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__utroverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna utr read counts mapped to the genome"

[qcparser_samtoolscountreads__mirna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__mirnaoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna miRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__rrna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__rrnaoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna rRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__lincrna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__lincrnaoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna lincRNA read counts mapped to the genome"

[qcparser_docsamplesummarystats__rna]
    module          = QCParser
    submodule       = DOCSampleSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetcoverage__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna on target depth of coverage stats"

[qcparser_docintervalsummarystats__rna]
    module          = QCParser
    submodule       = DOCIntervalSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetexoncoverage__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna on target exon depth of coverage stats"

[qcparser_abcgcbscore__original__rna]
    module          = QCParser
    submodule       = ABCGCBScore
    docker_image    = qcparser

    input_from      = abcgcbscore__original__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna original abc/gcb score"

[qcparser_abcgcbscore__exonicoverlap__rna]
    module          = QCParser
    submodule       = ABCGCBScore
    docker_image    = qcparser

    input_from      = abcgcbscore__exonicoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna exonic overlap abc/gcb score"

[qcparser_abcgcbscore__capturedexonicoverlap__rna]
    module          = QCParser
    submodule       = ABCGCBScore
    docker_image    = qcparser

    input_from      = abcgcbscore__capturedexonicoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna captured exonic overlap abc/gcb score"

[qcparser_abcgcbscore__spliced__rna]
    module          = QCParser
    submodule       = ABCGCBScore
    docker_image    = qcparser

    input_from      = abcgcbscore__spliced__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna spliced abc/gcb score"

[qcparser_abcgcbscore__spliced_capturedexonicoverlap__rna]
    module          = QCParser
    submodule       = ABCGCBScore
    docker_image    = qcparser

    input_from      = abcgcbscore__spliced_capturedexonicoverlap__rna, utils_consolidatesamplename__rna

    [[args]]
        note = "rna spliced captured exonic overlap abc/gcb score"

[qcreportmerger_cbind__rna]
    module          = QCReportMerger
    submodule       = Cbind
    docker_image    = qcparser

    input_from      = qcparser_fastqc__rawfastqc__rna, qcparser_fastqc__trimfastqc__rna,qcparser_fastqc__bowtie2fastqc__rna,  qcparser_trimmomatic__rna, qcparser_samtoolsflagstat__bowtie2__rna, qcparser_samtoolsflagstat__rna, qcparser_picardinsertsizematrics__rna, qcparser_samtoolscountreads__exon__rna, qcparser_samtoolscountreads__intron__rna, qcparser_samtoolscountreads__intergenic__rna, qcparser_samtoolscountreads__utr__rna, qcparser_samtoolscountreads__mirna__rna, qcparser_samtoolscountreads__rrna__rna, qcparser_samtoolscountreads__lincrna__rna, qcparser_docsamplesummarystats__rna, qcparser_docintervalsummarystats__rna, qcparser_samtoolscountreads__rna, qcparser_samtoolscountreads__ontarget__rna, qcparser_docsampleintervalsummary__rna, qcparser_samtoolscountreads__ercc__rna, qcparser_samtoolscountreads__bowtie2__rna,qcparser_abcgcbscore__original__rna, qcparser_abcgcbscore__exonicoverlap__rna,qcparser_abcgcbscore__capturedexonicoverlap__rna, qcparser_abcgcbscore__spliced__rna, qcparser_abcgcbscore__spliced_capturedexonicoverlap__rna

    final_output    = qc_report

### Multi-Omics-Analysis
#[multiomicsresults__rna]
#    module          = MultiOmicsResults
#    docker_image    = multi_omics_results
#
#    input_from      = utils_combineexpressionwithmetadata__rawcounts__rna
#
#    final_output    = expr_subset, coo_genes, expr_subset_coo, coo_classification, myc_bcl2_expr
#
#    [[args]]
#        ref_expr        = 1KDLBCL_target_expression_ref
#        ref_cell_model  = genetic_model_ref
