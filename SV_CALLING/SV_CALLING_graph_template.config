#[utils_consolidatesamplename__tna]
#    module = Utils
#    submodule = ConsolidateSampleName

[utils_consolidatesampleid__tna]
    module = Utils
    submodule = ConsolidateSampleId

[merge_bam]
    module = MergeBams
    docker_image = samtools
[discowave]
    module                      = DiscoWave
    submodule                   = DiscoWave
    docker_image                = disco_wave
    final_output                = translocation_table, non_split_bam, non_split_bam_idx, figure_dir
    input_from                  = merge_bam, utils_consolidatesampleid__tna
[filter_chrom_reads]
    module                      = FilterChromReads
    submodule                   = FilterChromReads
    docker_image                = filter_chrom_reads
    final_output                = bam, bam_idx
    input_from                  = merge_bam
    [[args]]
        nr_cpus                 = 8
        bed                     = padded_target_bed
[delly]
    module                      = Delly
    submodule                   = Delly
    docker_image                = delly
    final_output                = delly_vcf
    input_from                  = filter_chrom_reads
[lumpy]
    module                      = Lumpy
    submodule                   = Lumpy
    docker_image                = lumpy
    final_output                = lumpy_vcf, gt_vcf
    input_from                  = filter_chrom_reads
    [[args]]
        read_length             = 152
        discordant_z            = 5
        back_distance           = 10
        weight                  = 1
        min_mapping_threshold   = 20
        nr_cpus                 = 8
[dellymerger]
    module                      = Dellymerger
    submodule                   = Dellymerger
    docker_image                = dellymerger
    final_output                = merged_vcf
    input_from					= delly
    [[args]]
        chr_switch              = 0
        chr_filter              = 0
[lumpymerger]
    module                      = Lumpymerger
    submodule                   = Lumpymerger
    docker_image                = lumpymerger
    final_output                = merged_vcf
    input_from					= lumpy
    [[args]]
        chr_switch              = 0
        chr_filter              = 0
[Dellylumpymerger]
    module                      = Dellylumpymerger
    submodule                   = Dellylumpymerger
    docker_image                = dellylumpymerger
    final_output                = all_merged_vcf, all_merged_cons_vcf
    input_from					= dellymerger, lumpymerger
    [[args]]
        chr_filter              = 0
[Dellylumpy_anno_merger]
    module                      = Dellylumpy_anno_merger
    submodule                   = Dellylumpy_anno_merger
    docker_image                = dellylumpy_anno_merger
    input_from                  = Dellylumpymerger, discowave
    [[args]]
        bed                     = target_bed

[annotate_sv_genes]
    module                      = AnnotateSVs
    submodule                   = AnnotateSVGenes
    docker_image                = annotate_sv_genes
    input_from                  = Dellylumpy_anno_merger

[annotate_sv_repeats]
    module                      = AnnotateSVs
    submodule                   = AnnotateSVRepeats
    docker_image                = annotate_sv_repeats
    input_from                  = annotate_sv_genes
    
[annotate_sv_b_cell_genes]
    module                      = AnnotateSVs
    submodule                   = AnnotateSVBCellGenes
    docker_image                = annotate_sv_b_cell_genes
    input_from                  = annotate_sv_repeats

[annotate_sv_pon]
    module                      = AnnotateSVs
    submodule                   = AnnotateSVPON
    docker_image                = annotate_sv_pon
    input_from                  = annotate_sv_b_cell_genes

[filter_translocations]
    module                      = TranslocationFiltering
    submodule                   = TranslocationFiltering
    docker_image                = filter_translocations
    input_from                  = annotate_sv_pon
    final_output                = all_translocations, filt_translocations, fish_translocations


#[igv_snapshot]
#    module              = IGV_Snapshot
#    submodule           = IGV_Snapshot
#    input_from          = Dellylumpymerger, discowave, filter_chrom_reads
#    docker_image        = igv_snapshot
#    final_output        = igv_snapshot_dir
#    [[args]]
#        bed             = target_bed