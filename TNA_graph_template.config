[utils_concatfastq__tna]
    module      = Utils
    submodule   = ConcatFastq

    group       = alignment, demuxtna

    pipeline    = dna, rna, tna

[demuxtna__tna]
    module          = DemuxTNA
    docker_image    = cutadapt

    input_from      = utils_concatfastq__tna

    final_output    = demux_stats

    [[args]]
        barcodes = ****inline_barcodes

    group           = demuxtna

    pipeline    = tna

[gatk_bedtointervallist__ontarget__tna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = ****on_target_bed
        ref             = ref

    group       = qc

    pipeline    = dna, rna, tna

[gatk_bedtointervallist__ontargetexome__tna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = ****on_target_exome_bed
        ref             = ref

    group       = qc

    pipeline    = dna, rna, tna

####################### RNA Section
[utils_getdemuxfastq__rnafastqs__tna]
    module          = Utils
    submodule       = GetDemuxFASTQ

    input_from      = demuxtna__tna

    final_output    = R1, R2

    [[args]]
        keep_assay_type = RNA

    group       = alignment, demuxtna

    pipeline    = tna

[fastqc__raw__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = utils_getdemuxfastq__rnafastqs__tna

    final_output    = R1_fastqc, R2_fastqc

    group       = qc

    pipeline    = rna, tna

[trimmomatic__rna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    input_from      = utils_getdemuxfastq__rnafastqs__tna

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

    group       = alignment

    pipeline    = rna, tna

[fastqc__trim__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__rna

    final_output    = R1_fastqc, R2_fastqc

    group       = qc

    pipeline    = rna, tna

[utils_getreadgroup__rna]
    module          = Utils
    submodule       = GetReadGroup

    input_from      = trimmomatic__rna

    group       = alignment

    pipeline    = rna, tna

[star__rna]
    module          = Star
    docker_image    = star

    input_from      = fastqc__trim__rna, utils_getreadgroup__rna

    final_output    = transcriptome_mapped_bam, raw_read_counts, final_log

    [[args]]
        ref     = star_ref

    group       = alignment

    pipeline    = rna, tna

[samtools_index__star__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = star__rna

    final_output    = bam_idx

    group       = alignment

    pipeline    = rna, tna

[picard_markduplicates__rna]
    module          = Picard
    submodule       = MarkDuplicates
    docker_image    = picard

    input_from      = star__rna, samtools_index__rna

    final_output    = bam

    group       = alignment

    pipeline    = rna, tna

[samtools_index__picard_markduplicates__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = picard_markduplicates__rna

    final_output    = bam_idx

    group       = alignment

    pipeline    = rna, tna

[rsem__rna]
    module          = RSEM
    docker_image    = rsem

    input_from      = star__rna

    final_output    = isoforms_results, genes_results

    group           = quantification

    pipeline    = rna, tna

[utils_combineexpressionwithmetadata__rawcounts__rna]
    module          = Utils
    submodule       = CombineExpressionWithMetadata
    docker_image    = combine_exp_gene_name

    input_from      = star__rna

    final_output    = annotated_expression_file
        [[args]]
            result_type = "rawcounts"

    pipeline    = rna, tna

[utils_combineexpressionwithmetadata__rsem__rna]
    module          = Utils
    submodule       = CombineExpressionWithMetadata
    docker_image    = combine_exp_gene_name

    input_from      = rsem__rna

    final_output    = annotated_expression_file
        [[args]]
            result_type = "rsem"

    pipeline    = rna, tna

[abcgcbclassifier__rna]
    module          = ABCGCBClassifier
    docker_image    = classifier

    input_from      = utils_combineexpressionwithmetadata__rawcounts__rna

    final_output    = classification_report, gene_expr_subset_txt, gene_expr_subset_json, cell_of_origin_subtypes

    [[args]]
        ref         = classifier_ref

    group       = coo

    pipeline    = rna, tna

###### RNA Section QC
[samtools_flagstat__rna]
    module          = Samtools
    submodule       = Flagstat
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = flagstat

    group           = qc

    pipeline    = rna, tna

[picard_collectinsertsizematrics__rna]
    module          = Picard
    submodule       = CollectInsertSizeMetrics
    docker_image    = picard

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    final_output    = insert_size_report, insert_size_histogram

    group           = qc

    pipeline    = rna, tna

[samtools_view__countreads__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__exonoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = exonic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__intronoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = intron_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__intergenicoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = intergenic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__utroverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = utr_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__mirnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = mirna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__rrnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = rrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__lincrnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = lincrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[samtools_view__ontargetoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna

    [[args]]
        bed             = ****on_target_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = rna, tna

[gatk_depthofcoverage__ontargetcoverage__rna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3
    input_from   = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna, gatk_bedtointervallist__ontarget__tna

    final_output = per_base_summary, interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx

    group           = qc

    pipeline    = rna, tna

[gatk_depthofcoverage__ontargetexoncoverage__rna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3
    input_from   = picard_markduplicates__rna, samtools_index__picard_markduplicates__rna, gatk_bedtointervallist__ontargetexome__tna

    final_output = per_base_summary, interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx

    group           = qc

    pipeline    = rna, tna

###### RNA Section QCParser
[qcparser_demuxtnastats__tna]
    module          = QCParser
    submodule       = DemuxTNAStats
    docker_image    = qcparser

    input_from      = demuxtna__tna

    group           = qc

    pipeline    = rna, tna

[qcparser_fastqc__rawfastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__raw__rna

    [[args]]
        note = "rna fastqc report parsing for raw fastqs"

    group           = qc

    pipeline    = rna, tna

[qcparser_fastqc__trimfastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__trim__rna

    [[args]]
    note = "rna fastqc report parsing for trimmed fastqs"

    group           = qc

    pipeline    = rna, tna

[qcparser_trimmomatic__rna]
    module          = QCParser
    submodule       = Trimmomatic
    docker_image    = qcparser

    input_from      = trimmomatic__rna

    [[args]]
        note = "rna trimmomatic summary report parsing"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolsflagstat__rna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__rna

    [[args]]
        note = "rna star alignment summary report parsing"

    group           = qc

    pipeline    = rna, tna

[qcparser_picardinsertsizematrics__rna]
    module          = QCParser
    submodule       = PicardInsertMetrics
    docker_image    = qcparser

    input_from      = picard_collectinsertsizematrics__rna

    [[args]]
        note = "rna picard insert size summary report parsing"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__rna

    [[args]]
        note = "rna read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__ontarget__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__rna

    [[args]]
        note = "rna on target read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__exon__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__exonoverlap__rna

    [[args]]
        note = "rna exon read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__intron__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intronoverlap__rna

    [[args]]
        note = "rna intron read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__intergenic__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intergenicoverlap__rna

    [[args]]
        note = "rna intergenic read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__utr__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__utroverlap__rna

    [[args]]
        note = "rna utr read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__mirna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__mirnaoverlap__rna

    [[args]]
        note = "rna miRNA read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__rrna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__rrnaoverlap__rna

    [[args]]
        note = "rna rRNA read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_samtoolscountreads__lincrna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__lincrnaoverlap__rna

    [[args]]
        note = "rna lincRNA read counts mapped to the genome"

    group           = qc

    pipeline    = rna, tna

[qcparser_docsamplesummarystats__rna]
    module          = QCParser
    submodule       = DOCSampleSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetcoverage__rna

    [[args]]
        note = "rna on target depth of coverage stats"

    group           = qc

    pipeline    = rna, tna

[qcparser_docintervalsummarystats__rna]
    module          = QCParser
    submodule       = DOCIntervalSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetexoncoverage__rna

    [[args]]
        note = "rna on target exon depth of coverage stats"

    group           = qc

    pipeline    = rna, tna

[qcreportmerger_cbind__rna]
    module          = QCReportMerger
    submodule       = Cbind
    docker_image    = qcparser

    input_from      = qcparser_demuxtnastats__tna, qcparser_fastqc__rawfastqc__rna, qcparser_fastqc__trimfastqc__rna, qcparser_trimmomatic__rna, qcparser_samtoolsflagstat__rna, qcparser_picardinsertsizematrics__rna, qcparser_samtoolscountreads__exon__rna, qcparser_samtoolscountreads__intron__rna, qcparser_samtoolscountreads__intergenic__rna, qcparser_samtoolscountreads__utr__rna, qcparser_samtoolscountreads__mirna__rna, qcparser_samtoolscountreads__rrna__rna, qcparser_samtoolscountreads__lincrna__rna, qcparser_docsamplesummarystats__rna, qcparser_docintervalsummarystats__rna, qcparser_samtoolscountreads__rna, qcparser_samtoolscountreads__ontarget__rna

    group           = qc

    pipeline    = rna, tna

################## EXOME GRAPH
[utils_getdemuxfastq__dnafastqs__tna]
    module          = Utils
    submodule       = GetDemuxFASTQ

    input_from      = demux

    final_output    = R1, R2

    [[args]]
        keep_assay_type = DNA

    group       = alignment, demuxtna

    pipeline    = tna

[fastqc__raw__dna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = utils_getdemuxfastq__dnafastqs__tna

    final_output    = R1_fastqc, R2_fastqc

    group       = qc

    pipeline    = dna, tna

[trimmomatic__dna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    input_from      = utils_getdemuxfastq__dnafastqs__tna

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

    group       = alignment

    pipeline    = dna, tna

[fastqc__trim__dna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__dna

    final_output    = R1_fastqc, R2_fastqc

    group       = qc

    pipeline    = dna, tna

[utils_getreadgroup__dna]
    module = Utils
    submodule = GetReadGroup

    input_from = trimmomatic__dna

    group       = alignment

    pipeline    = dna, tna

[bwaaligner__dna]
    module = BwaAligner
    docker_image = bwa

    input_from = trimmomatic__dna, utils_getreadgroup__dna

    [[args]]
        ref = ref

    group       = alignment

    pipeline    = dna, tna

[samtools_index__bwaaligner__dna]
    module = Samtools
    submodule = Index
    docker_image = samtools

    input_from = bwaaligner__dna

    group       = alignment

    pipeline    = dna, tna

[picard_markduplicates__dna]
    module = Picard
    submodule = MarkDuplicates
    docker_image = picard

    input_from = bwaaligner__dna, samtools_index__bwaaligner__dna

    final_output = bam

    group       = alignment

    pipeline    = dna, tna

[samtools_index__picard_markduplicates__dna]
    module = Samtools
    submodule = Index
    docker_image = samtools

    input_from = mrkdup

    final_output = bam_idx

    group       = alignment

    pipeline    = dna, tna

[gatk_haplotypecaller__dna]
    module = GATK
    submodule = HaplotypeCaller
    docker_image = gatk4

    input_from = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    final_output = vcf, vcf_idx

    [[args]]
        gatk_version = 4
        ref = ref
        ref_dict = ref_dict
        ref_idx = ref_idx
        output_type = vcf
        bed = ****on_target_bed

    group       = vc

    pipeline    = dna, tna

[bcftools_bcftoolsnorm__dna]
    module = Bcftools
    submodule = BCFToolsNorm
    docker_image = bcftools

    input_from = gatk_haplotypecaller__dna

    final_output = vcf

    [[args]]
        ref = ref

    group       = vc

    pipeline    = dna, tna

[annovar__dna]
    module          = Annovar

    input_from      = bcftools_bcftoolsnorm__dna

    final_output    = vcf

    [[args]]
        dbdir   = "/ref/annovar/humandb"
        operations = "g,r,f,f,f,f,f,f,f,f,f,f,f,f"
        protocol = "refGene,genomicSuperDups,exac03,gnomad_exome,gnomad_genome,avsnp150,esp6500siv2_all,1000g2015aug_all,cosmic87_coding,cosmic87_noncoding,dbnsfp35a,cadd14gt10,nci60,clinvar_20180603"
        buildver = "hg38"

    group       = vc

    pipeline    = dna, tna

[utils_recodevcf__dna]
    module = Utils
    submodule = RecodeVCF
    docker_image = pipeline_tools

    input_from = annovar__dna

    final_output = recoded_vcf

    group       = vc

    pipeline    = dna, tna

[variantfilter__dna]
    module          = VariantFilter
    docker_image    = variant_filter

    input_from      = utils_recodevcf__dna
    final_output    = filter_variants_text, filter_variants_json, subset_filter_variants_text

    group       = vc

    pipeline    = dna, tna

###### DNA Section QC
[samtools_flagstat__dna]
    module =  Samtools
    submodule = Flagstat
    docker_image = samtools

    input_from = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    final_output = flagstat

    group           = qc

    pipeline    = dna, tna

[picard_collectinsertsizematrics__dna]
    module = Picard
    submodule = CollectInsertSizeMetrics
    docker_image = picard

    input_from = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    final_output = insert_size_report, insert_size_histogram

    group           = qc

    pipeline    = dna, tna

[samtools_view__countreads__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__exonoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = exome_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__intronoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = intron_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__intergenicoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = intergenic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__utroverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = utr_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__mirnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = mirna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__rrnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = rrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__lincrnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = lincrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[samtools_view__ontargetoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    [[args]]
        bed             = ****on_target_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

    group           = qc

    pipeline    = dna, tna

[gatk_depthofcoverage__ontargetcoverage__dna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3

    input_from   = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    final_output = per_base_summary, interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx

    group           = qc

    pipeline    = dna, tna

[gatk_depthofcoverage__ontargetexoncoverage__dna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3

    input_from   = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna, gatk_bedtointervallist__ontargetexome__tna

    final_output = per_base_summary, interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx

    group           = qc

    pipeline    = dna, tna

###### DNA Section QCParser
[qcparser_fastqc__rawfastqc__dna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__raw__dna

    [[args]]
        note = "dna fastqc report parsing for raw fastqs"

    group           = qc

    pipeline    = dna, tna

[qcparser_fastqc__trimfastqc__dna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__trim__dna

    [[args]]
        note = "dna fastqc report parsing for trimmed fastqs"

    group           = qc

    pipeline    = dna, tna

[qcparser_trimmomatic__dna]
    module          = QCParser
    submodule       = Trimmomatic
    docker_image    = qcparser

    input_from      = trimmomatic__dna

    [[args]]
        note = "dna trimmomatic summary report parsing"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolsflagstat__dna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__dna

    [[args]]
        note = "dna star alignment summary report parsing"

    group           = qc

    pipeline    = dna, tna

[qcparser_picardinsertsizematrics__dna]
    module          = QCParser
    submodule       = PicardInsertMetrics
    docker_image    = qcparser

    input_from      = picard_collectinsertsizematrics__dna

    [[args]]
        note = "dna picard insert size summary report parsing"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__dna

    [[args]]
        note = "dna read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__ontarget__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__dna

    [[args]]
        note = "dna on target read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__exon__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__exonoverlap__dna

    [[args]]
        note = "dna exon read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__intron__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intronoverlap__dna

    [[args]]
        note = "dna intron read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__intergenic__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intergenicoverlap__dna

    [[args]]
        note = "dna intergenic read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__utr__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__utroverlap__dna

    [[args]]
        note = "dna utr read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__midna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__midnaoverlap__dna

    [[args]]
        note = "dna miRNA read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__rdna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__rdnaoverlap__dna

    [[args]]
        note = "dna rRNA read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_samtoolscountreads__lincdna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__lincdnaoverlap__dna

    [[args]]
        note = "dna lincRNA read counts mapped to the genome"

    group           = qc

    pipeline    = dna, tna

[qcparser_docsamplesummarystats__dna]
    module          = QCParser
    submodule       = DOCSampleSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetcoverage__dna

    [[args]]
        note = "dna on target depth of coverage stats"

    group           = qc

    pipeline    = dna, tna

[qcparser_docintervalsummarystats__dna]
    module          = QCParser
    submodule       = DOCIntervalSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetexoncoverage__dna

    [[args]]
        note = "dna on target exon depth of coverage stats"

    group           = qc

    pipeline    = dna, tna

[qcreportmerger_cbind__dna]
    module          = QCReportMerger
    submodule       = Cbind
    docker_image    = qcparser

    input_from      = qcparser_demuxtnastats__tna, qcparser_fastqc__rawfastqc__dna, qcparser_fastqc__trimmfastqc__dna, qcparser_trimmomatic__dna, qcparser_samtoolsflagstat__dna, qcparser_picardinsertsizematrics__dna, qcparser_samtoolscountreads__exon__dna, qcparser_samtoolscountreads__intron__dna, qcparser_samtoolscountreads__intergenic__dna, qcparser_samtoolscountreads__utr__dna, qcparser_samtoolscountreads__midna__dna, qcparser_samtoolscountreads__rdna__dna, qcparser_samtoolscountreads__lincdna__dna, qcparser_docsamplesummarystats__dna, qcparser_docintervalsummarystats__dna, qcparser_samtoolscountreads__dna, qcparser_samtoolscountreads__ontarget__dna

    group           = qc

    pipeline    = dna, tna

################## Final QC Merge TNA (DNA + RNA)
[qcreportmerger_cbind__tna]
    module = QCReportMerger
    submodule = Cbind
    docker_image = qcparser

    input_from = qcreportmerger_cbind__rna, qcreportmerger_cbind__dna

    final_output = qc_report

    group           = qc

    pipeline    = tna
