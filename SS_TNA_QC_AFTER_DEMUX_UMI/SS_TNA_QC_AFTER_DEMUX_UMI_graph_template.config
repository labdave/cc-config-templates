[utils_consolidatesamplename__tna]
    module      = Utils
    submodule   = ConsolidateSampleName

[utils_springdecompress__tna]
    module          = Utils
    submodule       = SpringDecompress
    docker_image    = spring

[demuxtna__tna]
    module = Docker
    docker_image = cancer
    final_output = demux_stats
    input_from = utils_consolidatesamplename__tna, utils_springdecompress__tna
    [[args]]
        cpus = 32
        memory = 16
        inputs = R1, R2, sample_name, barcodes
        barcodes = AGTCGACATG, TCGACATG
        commands = python -m Cancer.run demux_inline --r1 ${R1} --r2 ${R2} --barcode "${barcodes}=${OUTPUT_PATH}${sample_name}.RNA" --unmatched ${OUTPUT_PATH}${sample_name}.non-RNA --stats ${OUTPUT_PATH}all_barcode_stats.csv --name ${sample_name} --header rna
        [[[outputs]]]
            R1 = ${OUTPUT_PATH}${sample_name}.RNA.R1.fastq.gz, ${OUTPUT_PATH}${sample_name}.non-RNA.R1.fastq.gz
            R2 = ${OUTPUT_PATH}${sample_name}.RNA.R2.fastq.gz, ${OUTPUT_PATH}${sample_name}.non-RNA.R2.fastq.gz
            demux_stats = ${OUTPUT_PATH}all_barcode_stats.csv
            assay_type = rna, dna

[gatk_bedtointervallist__ontarget__tna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_bed
        ref             = ref
        ref_idx         = ref_idx
        ref_dict        = ref_dict

[gatk_bedtointervallist__primary__ontarget__tna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    final_output = interval_list

    [[args]]
        bed             = target_bed_primary_ref
        gatk_version    = 4
        ref             = primary_ref
        ref_dict        = primary_ref_dict
        ref_idx         = primary_ref_idx

[gatk_bedtointervallist__ontargetexome__tna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_exonic_bed
        ref             = ref
        ref_idx         = ref_idx
        ref_dict        = ref_dict

[gatk_bedtointervallist__primary__ontargetexome__tna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        bed             = target_exonic_bed_primary_ref
        gatk_version    = 4
        ref             = primary_ref
        ref_dict        = primary_ref_dict
        ref_idx         = primary_ref_idx


####################### RNA Section
[utils_getdemuxfastq__rnafastqs__tna]
    module          = Utils
    submodule       = GetDemuxFASTQ

    input_from      = demuxtna__tna

    final_output    = R1, R2

    [[args]]
        keep_assay_type = RNA

[utils_subsetfastq__rna]
    module          = Utils
    submodule       = SubsetFASTQ
    docker_image    = seqtk
    input_from      = utils_getdemuxfastq__rnafastqs__tna

    final_output    = R1, R2

    [[args]]
        sample = 2000000

[fastqc__raw__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = utils_subsetfastq__rna

    final_output    = R1_fastqc, R2_fastqc

    [[args]]
        mem     = 12

[trimmomatic__rna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    input_from      = utils_subsetfastq__rna

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

[fastqc__trim__rna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__rna

    final_output    = R1_fastqc, R2_fastqc

    [[args]]
        mem     = 12

[utils_getreadgroup__rna]
    module          = Utils
    submodule       = GetReadGroup

    input_from      = trimmomatic__rna, utils_consolidatesamplename__tna

[star__rna]
    module          = Star
    docker_image    = star

    input_from      = trimmomatic__rna, utils_getreadgroup__rna

    final_output    = raw_read_counts, final_log, splice_junction_out

    [[args]]
        ref     = star_ref

[samtools_index__star__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = star__rna

[samtools_sort__star__transcriptomebam__rna]
    module          = Samtools
    submodule       = Sort
    docker_image    = samtools

    input_from      = star__rna

    final_output    = transcriptome_mapped_bam

[samtools_index__sorted_transcriptomebam__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = samtools_sort__star__transcriptomebam__rna

    final_output    = transcriptome_bam_idx

# For later subsetting by read names to other BAMs, convert to BAM key
[renamekeys__samtools_sort__star__transcriptomebam__rna]
    module          = RenameKeys
    submodule       = RenameTranscriptomeBamToBam
    docker_image    = samtools

    input_from      = samtools_sort__star__transcriptomebam__rna

[utils_getreadnames__star__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = star__rna

[samtools_addreplacerg__umi__rna]
    module = Samtools
    submodule = AddReplaceRG
    docker_image = samtools

    input_from = utils_getreadgroup__rna

[gatk_filtersamreads__umi__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__star__rna, samtools_addreplacerg__umi__rna

    [[args]]
        gatk_version    = 4
        ref             = primary_ref
        ref_idx         = primary_ref_idx
        ref_dict        = primary_ref_dict
        include_reads   = True

[rename_umi__rna]
    module          = RenameKeys
    submodule       = RenameUMI

    input_from      = gatk_filtersamreads__umi__rna

[gatk_mergeumi__rna]
    module          = GATK
    submodule       = MergeBamAlignment
    docker_image    = gatk4

    input_from      = rename_umi__rna, star__rna, samtools_index__star__rna

    [[args]]
        gatk_version    = 4
        ref             = primary_ref
        ref_idx         = primary_ref_idx
        ref_dict        = primary_ref_dict

[picard_markduplicates__umi__rna]
    module          = Picard
    submodule       = MarkDuplicates
    docker_image    = picard

    input_from      = gatk_mergeumi__rna

    [[args]]
        barcode_tag = RX

[samtools_index__picard_markduplicates__umi__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna

[rename_rna]
    module          = RenameKeys
    submodule       = RenameRNA
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna

    final_output    = rna_bam, rna_bam_idx

[utils_getreadnames__spliced__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        spliced_reads = True

[utils_getreadnames__spliced_rmdup__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        spliced_reads = True
        remove_dups   = True

[gatk_filtersamreads__spliced__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced_rmdup__rna, renamekeys__samtools_sort__star__transcriptomebam__rna

    [[args]]
        gatk_version    = 4
        ref             = transcript_ref
        ref_dict        = transcript_ref_dict
        ref_idx         = transcript_ref_idx
        include_reads   = True

[samtools_index__gatk_filtersamreads__spliced__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced__rna

[renamekeys_renamespliced__spliced__rna]
    module          = RenameKeys
    submodule       = RenameBamToSplicedTxRNABam
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced__rna

    final_output    = spliced_rna_transcriptome_bam

[gatk_filtersamreads__nonspliced__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced__rna, picard_markduplicates__umi__rna

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        exclude_reads   = True

[filter_chrom_reads__short_insert__rna]
    module          = FilterChromReads
    submodule       = FilterLongInsertExonicReads
    docker_image    = filter_long_insert_exonic_reads

    input_from      = gatk_filtersamreads__nonspliced__rna

[utils_getreadnames__nonspliced_short_insert__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = filter_chrom_reads__short_insert__rna

    [[args]]
        remove_dups   = True

[gatk_filtersamreads__nonspliced_short_insert__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__nonspliced_short_insert__rna, renamekeys__samtools_sort__star__transcriptomebam__rna

    [[args]]
        gatk_version    = 4
        ref             = transcript_ref
        ref_dict        = transcript_ref_dict
        ref_idx         = transcript_ref_idx
        include_reads   = True

[samtools_index__gatk_filtersamreads__nonspliced_short_insert__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_short_insert__rna

[renamekeys_renameshortinsert__nonspliced_short_insert__rna]
    module          = RenameKeys
    submodule       = RenameBamToShortInsertTxBam
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_short_insert__rna

    final_output    = short_insert_rna_transcriptome_bam

[renamekeys_renamelonginsert__nonspliced_long_insert__rna]
    module          = RenameKeys
    submodule       = RenameLongInsertBamToBam
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__rna

[utils_getreadnames__nonspliced_long_insert__rna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = renamekeys_renamelonginsert__nonspliced_long_insert__rna

    [[args]]
        remove_dups   = True

[gatk_filtersamreads__nonspliced_long_insert__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__nonspliced_long_insert__rna, renamekeys__samtools_sort__star__transcriptomebam__rna

    [[args]]
        gatk_version    = 4
        ref             = transcript_ref
        ref_dict        = transcript_ref_dict
        ref_idx         = transcript_ref_idx
        include_reads   = True

[samtools_index__gatk_filtersamreads__nonspliced_long_insert__rna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_long_insert__rna

[renamekeys_renamelonginserttx__nonspliced_long_insert__rna]
    module          = RenameKeys
    submodule       = RenameBamToLongInsertTxRNABam
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_long_insert__rna

    final_output    = long_insert_rna_transcriptome_bam


###### RNA Section QC
[gatk_collectgcbiasmetrics__rna]
    module       = GATK
    submodule    = CollectGcBiasMetrics
    docker_image = gatk4

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    final_output    = gc_bias_matrics, gc_bias_plot, summary_matrics

    [[args]]
        gatk_version    = 4
        ref             = primary_ref
        ref_idx         = primary_ref_idx
        ref_dict        = primary_ref_dict

[samtools_flagstat__rna]
    module          = Samtools
    submodule       = Flagstat
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    final_output    = flagstat

[samtools_stats__rna]
    module =  Samtools
    submodule = Stats
    docker_image = samtools

    input_from = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    final_output = stats

[samtools_stats__transcriptomebam__rna]
    module          = Samtools
    submodule       = Stats
    docker_image    = samtools

    input_from      = samtools_sort__star__transcriptomebam__rna, samtools_index__sorted_transcriptomebam__rna

    final_output    = stats

[samtools_idxstats__rna]
    module = Samtools
    submodule = Idxstats
    docker_image = samtools

    input_from = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    final_output = idxstats

[picard_collectinsertsizematrics__rna]
    module          = Picard
    submodule       = CollectInsertSizeMetrics
    docker_image    = picard

    input_from      = samtools_sort__star__transcriptomebam__rna, samtools_index__sorted_transcriptomebam__rna

    final_output    = insert_size_report, insert_size_histogram

[samtools_view__countreads__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__exonoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = exonic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intronoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = intron_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intergenicoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = intergenic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__utroverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = utr_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__rrnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = rrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__mirnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = mirna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__lincrnaoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = lincrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__erccoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = ercc_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__ontargetoverlap__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna

    [[args]]
        bed             = target_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[gatk_depthofcoverage__ontargetcoverage__rna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3
    input_from   = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna, gatk_bedtointervallist__primary__ontarget__tna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = primary_ref
        ref_dict     = primary_ref_dict
        ref_idx      = primary_ref_idx
        nr_cpus      = 16
        mem          = 64

[gatk_depthofcoverage__ontargetexoncoverage__rna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3
    input_from   = picard_markduplicates__umi__rna, samtools_index__picard_markduplicates__umi__rna, gatk_bedtointervallist__primary__ontargetexome__tna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = primary_ref
        ref_dict     = primary_ref_dict
        ref_idx      = primary_ref_idx
        nr_cpus      = 16
        mem          = 64

[samtools_view__splicedreads__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced__rna,samtools_index__gatk_filtersamreads__spliced__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__shortinsert__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_short_insert__rna,samtools_index__gatk_filtersamreads__nonspliced_short_insert__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment


[samtools_view__longinsert__rna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_long_insert__rna,samtools_index__gatk_filtersamreads__nonspliced_long_insert__rna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment


###### RNA Section QCParser
[qcparser_demuxtnastats__tna]
    module          = QCParser
    submodule       = DemuxTNAStats
    docker_image    = qcparser

    input_from      = demuxtna__tna, utils_consolidatesamplename__tna

[qcparser_fastqc__rawfastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__raw__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna fastqc report parsing for raw fastqs"

[qcparser_fastqc__trimfastqc__rna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__trim__rna, utils_consolidatesamplename__tna

    [[args]]
    note = "rna fastqc report parsing for trimmed fastqs"

[qcparser_trimmomatic__rna]
    module          = QCParser
    submodule       = Trimmomatic
    docker_image    = qcparser

    input_from      = trimmomatic__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna trimmomatic summary report parsing"

[qcparser_samtoolsflagstat__rna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna star alignment summary report parsing"

[qcparser_samtoolsstats__rna]
    module          = QCParser
    submodule       = SamtoolsStats
    docker_image    = qcparser

    input_from      = samtools_stats__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna samtools stats summary report parsing"

[qcparser_samtoolsstats__transcriptomebam__rna]
    module          = QCParser
    submodule       = SamtoolsStats
    docker_image    = qcparser

    input_from      = samtools_stats__transcriptomebam__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna transcriptome samtools stats summary report parsing"

[qcparser_samtoolsidxstats__rna]
    module          = QCParser
    submodule       = SamtoolsIdxstats
    docker_image    = qcparser

    input_from      = samtools_idxstats__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna samtools idxstats summary report parsing"

[qcparser_picardinsertsizematrics__rna]
    module          = QCParser
    submodule       = PicardInsertMetrics
    docker_image    = qcparser

    input_from      = picard_collectinsertsizematrics__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna picard insert size summary report parsing"

[qcparser_samtoolscountreads__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna read counts mapped to the genome"

[qcparser_samtoolscountreads__splicereads__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__splicedreads__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna unique splice read counts mapped to the transcriptome"

[qcparser_samtoolscountreads__shortinsertreads__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__shortinsert__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna unique nonspliced short insert read counts mapped to the transcriptome"

[qcparser_samtoolscountreads__longinsertreads__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__longinsert__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna unique nonspliced long insert read counts mapped to the transcriptome"

[qcparser_samtoolscountreads__ontarget__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__ontargetoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna on target read counts mapped to the genome"

[qcparser_samtoolscountreads__exon__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__exonoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna exon read counts mapped to the genome"

[qcparser_samtoolscountreads__intron__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intronoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna intron read counts mapped to the genome"

[qcparser_samtoolscountreads__intergenic__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intergenicoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna intergenic read counts mapped to the genome"

[qcparser_samtoolscountreads__utr__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__utroverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna utr read counts mapped to the genome"

[qcparser_samtoolscountreads__rrna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__rrnaoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna rRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__mirna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__mirnaoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna miRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__lincrna__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__lincrnaoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna lincRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__ercc__rna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__erccoverlap__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna ERCC read counts mapped to the genome"

[qcparser_docsamplesummarystats__rna]
    module          = QCParser
    submodule       = DOCSampleSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetcoverage__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna on target depth of coverage stats"

[qcparser_docintervalsummarystats__rna]
    module          = QCParser
    submodule       = DOCIntervalSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetexoncoverage__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna on target exon depth of coverage stats"

[qcparser_starstats__rna]
    module          = QCParser
    submodule       = StarStats
    docker_image    = qcparser

    input_from      = star__rna

    [[args]]
        note = "rna star splice read stats"

[qcparser_stargenereadcounts__rna]
    module          = QCParser
    submodule       = StarGeneReadCounts
    docker_image    = qcparser

    input_from      = star__rna, utils_consolidatesamplename__tna

    [[args]]
        note = "rna star gene read counts for ERCC"

[qcreportmerger_cbind__rna]
    module          = QCReportMerger
    submodule       = Cbind
    docker_image    = qcparser

    input_from = qcparser_demuxtnastats__tna, qcparser_fastqc__rawfastqc__rna,qcparser_fastqc__trimfastqc__rna,qcparser_trimmomatic__rna, qcparser_samtoolsflagstat__rna, qcparser_picardinsertsizematrics__rna,qcparser_samtoolscountreads__exon__rna, qcparser_samtoolscountreads__intron__rna,qcparser_samtoolscountreads__intergenic__rna, qcparser_samtoolscountreads__utr__rna,qcparser_samtoolscountreads__rrna__rna,qcparser_samtoolscountreads__mirna__rna,qcparser_samtoolscountreads__lincrna__rna, qcparser_docsamplesummarystats__rna,qcparser_docintervalsummarystats__rna, qcparser_samtoolscountreads__rna, qcparser_samtoolscountreads__ontarget__rna, qcparser_samtoolscountreads__ercc__rna,qcparser_stargenereadcounts__rna,qcparser_samtoolsstats__transcriptomebam__rna,qcparser_samtoolsstats__rna,qcparser_samtoolsidxstats__rna,qcparser_starstats__rna, qcparser_samtoolscountreads__splicereads__rna, qcparser_samtoolscountreads__shortinsertreads__rna, qcparser_samtoolscountreads__longinsertreads__rna


################## EXOME GRAPH
[utils_getdemuxfastq__dnafastqs__tna]
    module          = Utils
    submodule       = GetDemuxFASTQ

    input_from      = demuxtna__tna

    final_output    = R1, R2

    [[args]]
        keep_assay_type = DNA

[utils_subsetfastq__dna]
    module          = Utils
    submodule       = SubsetFASTQ
    docker_image    = seqtk
    input_from      = utils_getdemuxfastq__dnafastqs__tna

    final_output    = R1, R2

    [[args]]
        sample = 10000000

[fastqc__raw__dna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = utils_subsetfastq__dna

    final_output    = R1_fastqc, R2_fastqc

        [[args]]
            mem     = 12

[trimmomatic__dna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    input_from      = utils_subsetfastq__dna

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

[fastqc__trim__dna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__dna

    final_output    = R1_fastqc, R2_fastqc

        [[args]]
            mem     = 12

[utils_getreadgroup__dna]
    module = Utils
    submodule = GetReadGroup

    input_from = trimmomatic__dna, utils_consolidatesamplename__tna

[star__dna]
    module          = Star
    docker_image    = star

    input_from      = trimmomatic__dna, utils_getreadgroup__dna

    [[args]]
        ref         = star_ref

[samtools_index__star__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = star__dna

[utils_getreadnames__spliced__dna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = star__dna, samtools_index__star__dna

    [[args]]
        spliced_reads = True
        #bed = target_bed

[utils_getreadnames__spliced_rmdup__dna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = star__dna, samtools_index__star__dna

    [[args]]
        spliced_reads = True
        remove_dups   = True

[sentieon_bwamem__dna]
    module          = Sentieon
    submodule       = BWAMem
    docker_image    = sentieon

    input_from      = trimmomatic__dna, utils_getreadgroup__dna

    [[args]]
        ref     = bwa_ref

[samtools_index__sentieon_bwamem__dna]
    module = Samtools
    submodule = Index
    docker_image = samtools

    input_from = sentieon_bwamem__dna


[utils_getreadnames__sentieon_bwamem__dna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = sentieon_bwamem__dna

[samtools_addreplacerg__umi__dna]
    module = Samtools
    submodule = AddReplaceRG
    docker_image = samtools

    input_from = utils_getreadgroup__dna

[gatk_filtersamreads__umi__dna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__sentieon_bwamem__dna, samtools_addreplacerg__umi__dna

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        include_reads   = True

[rename_umi__dna]
    module          = RenameKeys
    submodule       = RenameUMI

    input_from      = gatk_filtersamreads__umi__dna

[gatk_mergeumi__dna]
    module          = GATK
    submodule       = MergeBamAlignment
    docker_image    = gatk4

    input_from      = rename_umi__dna, sentieon_bwamem__dna, samtools_index__sentieon_bwamem__dna

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_idx         = ref_idx
        ref_dict        = ref_dict

[picard_markduplicates__umi__dna]
    module = Picard
    submodule = MarkDuplicates
    docker_image = picard

    input_from = gatk_mergeumi__dna

    [[args]]
        barcode_tag = RX

[samtools_index__picard_markduplicates__umi__dna]
    module = Samtools
    submodule = Index
    docker_image = samtools

    input_from = picard_markduplicates__umi__dna

[gatk_filtersamreads__spliced__dna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced__dna, picard_markduplicates__umi__dna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        include_reads   = True

[samtools_index__gatk_filtersamreads__spliced__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced__dna

    final_output    = bam_idx

[gatk_filtersamreads__nonspliced__dna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced__dna, picard_markduplicates__umi__dna

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        exclude_reads   = True

[filter_chrom_reads__short_insert__dna]
    module          = FilterChromReads
    submodule       = FilterLongInsertExonicReads
    docker_image    = filter_long_insert_exonic_reads

    input_from      = gatk_filtersamreads__nonspliced__dna

    final_output    = bam, long_insert_bam

[samtools_index__filter_chrom_reads__short_insert__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna

    final_output    = bam_idx

# Get transcriptome DNA BAM outputs
[samtools_sort__star__transcriptomebam__dna]
    module          = Samtools
    submodule       = Sort
    docker_image    = samtools

    input_from      = star__dna

# For subsetting by read names to other BAMs, convert to BAM key
[renamekeys__samtools_sort__star__transcriptomebam__dna]
    module          = RenameKeys
    submodule       = RenameTranscriptomeBamToBam
    docker_image    = samtools

    input_from      = samtools_sort__star__transcriptomebam__dna

[gatk_filtersamreads__spliced_tx__dna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced_rmdup__dna, renamekeys__samtools_sort__star__transcriptomebam__dna

    [[args]]
        gatk_version    = 4
        ref             = transcript_ref
        ref_dict        = transcript_ref_dict
        ref_idx         = transcript_ref_idx
        exclude_reads   = True

[samtools_index__gatk_filtersamreads__spliced_tx__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced_tx__dna

[renamekeys_renamespliced__spliced_tx__dna]
    module          = RenameKeys
    submodule       = RenameBamToSplicedTxDNABam
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced_tx__dna

    final_output    = spliced_dna_transcriptome_bam

[renamekeys_renamelonginsert__nonspliced_long_insert__dna]
    module          = RenameKeys
    submodule       = RenameLongInsertBamToBam
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna

[utils_getreadnames__nonspliced_long_insert__dna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = renamekeys_renamelonginsert__nonspliced_long_insert__dna

    [[args]]
        remove_dups   = True

[gatk_filtersamreads__nonspliced_long_insert__dna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__nonspliced_long_insert__dna, renamekeys__samtools_sort__star__transcriptomebam__dna

    [[args]]
        gatk_version    = 4
        ref             = transcript_ref
        ref_dict        = transcript_ref_dict
        ref_idx         = transcript_ref_idx
        include_reads   = True

[samtools_index__gatk_filtersamreads__nonspliced_long_insert__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_long_insert__dna

[renamekeys_renamelonginserttx__nonspliced_long_insert__dna]
    module          = RenameKeys
    submodule       = RenameBamToLongInsertTxDNABam
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_long_insert__dna

    final_output    = long_insert_dna_transcriptome_bam

[gatk_collectgcbiasmetrics__dna]
    module          = GATK
    submodule       = CollectGcBiasMetrics
    docker_image    = gatk4

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output    = gc_bias_matrics, gc_bias_plot, summary_matrics

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[gatk_collectoxogmetrics__dna]
    module       = GATK
    submodule    = CollectOxoGMetrics
    docker_image = gatk4

    input_from   = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output = oxog_bias_matrics

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[gatk_collectsequencingartifactmetrics__dna]
    module       = GATK
    submodule    = CollectSequencingArtifactMetrics
    docker_image = gatk4

    input_from   = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output = pre_adapter_detail_metrics,pre_adapter_summary_metrics,bait_bias_detail_metrics, bait_bias_summary_metrics, error_summary_metrics

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx

[utils_coverttosam__dna]
    module          = Utils
    submodule       = CovertToSAM
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output    = sam

    [[args]]
        bed             = ercc_bed
        exclude_flag    = 2308


###### DNA Section QC
[samtools_flagstat__dna]
    module =  Samtools
    submodule = Flagstat
    docker_image = samtools

    input_from = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output = flagstat

[samtools_stats__dna]
    module =  Samtools
    submodule = Stats
    docker_image = samtools

    input_from = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output = stats

[samtools_idxstats__dna]
    module = Samtools
    submodule = Idxstats
    docker_image = samtools

    input_from = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output = idxstats

[picard_collectinsertsizematrics__dna]
    module = Picard
    submodule = CollectInsertSizeMetrics
    docker_image = picard

    input_from = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    final_output = insert_size_report, insert_size_histogram

[samtools_view__countreads__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__exonoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = exonic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intronoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = intron_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intergenicoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = intergenic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__utroverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = utr_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__mirnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = mirna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__lincrnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = lincrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__rrnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = rrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__ontargetoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = target_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__erccoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna

    [[args]]
        bed             = ercc_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[utils_geterccreadcounts__dna]
    module          = Utils
    submodule       = GetERCCReadCounts

    input_from      = utils_coverttosam__dna

    final_output    = read_counts

[gatk_depthofcoverage__ontargetcoverage__dna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3

    input_from   = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna, gatk_bedtointervallist__ontarget__tna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx
        nr_cpus      = 16
        mem          = 64

[gatk_depthofcoverage__ontargetexoncoverage__dna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3

    input_from   = filter_chrom_reads__short_insert__dna, samtools_index__filter_chrom_reads__short_insert__dna, gatk_bedtointervallist__ontargetexome__tna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx
        nr_cpus      = 16
        mem          = 64

[samtools_view__splicedreads__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced_tx__dna, samtools_index__gatk_filtersamreads__spliced_tx__dna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__longinsert__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = gatk_filtersamreads__nonspliced_long_insert__dna, samtools_index__gatk_filtersamreads__nonspliced_long_insert__dna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

###### DNA Section QCParser
[qcparser_fastqc__rawfastqc__dna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__raw__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna fastqc report parsing for raw fastqs"

[qcparser_fastqc__trimfastqc__dna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__trim__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna fastqc report parsing for trimmed fastqs"

[qcparser_trimmomatic__dna]
    module          = QCParser
    submodule       = Trimmomatic
    docker_image    = qcparser

    input_from      = trimmomatic__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna trimmomatic summary report parsing"

[qcparser_samtoolsflagstat__dna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna bwa-mem alignment summary report parsing"

[qcparser_samtoolsstats__dna]
    module          = QCParser
    submodule       = SamtoolsStats
    docker_image    = qcparser

    input_from      = samtools_stats__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna samtools stats summary report parsing"

[qcparser_samtoolsidxstats__dna]
    module          = QCParser
    submodule       = SamtoolsIdxstats
    docker_image    = qcparser

    input_from      = samtools_idxstats__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna samtools idxstats summary report parsing"

[qcparser_picardinsertsizematrics__dna]
    module          = QCParser
    submodule       = PicardInsertMetrics
    docker_image    = qcparser

    input_from      = picard_collectinsertsizematrics__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna picard insert size summary report parsing"

[qcparser_samtoolscountreads__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna read counts mapped to the genome"

[qcparser_samtoolscountreads__ontarget__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__ontargetoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna on target read counts mapped to the genome"

[qcparser_samtoolscountreads__exon__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__exonoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna exon read counts mapped to the genome"

[qcparser_samtoolscountreads__intron__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intronoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna intron read counts mapped to the genome"

[qcparser_samtoolscountreads__intergenic__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intergenicoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna intergenic read counts mapped to the genome"

[qcparser_samtoolscountreads__utr__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__utroverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna utr read counts mapped to the genome"

[qcparser_samtoolscountreads__mirna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__mirnaoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna miRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__lincrna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__lincrnaoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna lincRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__rrna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__rrnaoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna rRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__ercc__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__erccoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna ERCC read counts mapped to the genome"

[qcparser_erccreadcounts__dna]
    module          = QCParser
    submodule       = ERCCReadCounts
    docker_image    = qcparser

    input_from      = utils_geterccreadcounts__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna ERCC read counts per bait"

[qcparser_docsamplesummarystats__dna]
    module          = QCParser
    submodule       = DOCSampleSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetcoverage__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna on target depth of coverage stats"

[qcparser_docintervalsummarystats__dna]
    module          = QCParser
    submodule       = DOCIntervalSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetexoncoverage__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna on target exon depth of coverage stats"

[qcparser_samtoolscountreads__splicedreads__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__splicedreads__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna unique splice read counts mapped to the transcriptome"

[qcparser_samtoolscountreads__longinsert__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__longinsert__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna unique nonspliced long insert read counts mapped to the transcriptome"


[qcreportmerger_cbind__dna]
    module          = QCReportMerger
    submodule       = Cbind
    docker_image    = qcparser

    input_from      = qcparser_demuxtnastats__tna, qcparser_fastqc__rawfastqc__dna, qcparser_fastqc__trimfastqc__dna,qcparser_trimmomatic__dna, qcparser_samtoolsflagstat__dna, qcparser_picardinsertsizematrics__dna,qcparser_samtoolscountreads__exon__dna, qcparser_samtoolscountreads__intron__dna,qcparser_samtoolscountreads__intergenic__dna, qcparser_samtoolscountreads__utr__dna,qcparser_samtoolscountreads__mirna__dna, qcparser_samtoolscountreads__rrna__dna, qcparser_samtoolscountreads__lincrna__dna, qcparser_docsamplesummarystats__dna, qcparser_docintervalsummarystats__dna, qcparser_samtoolscountreads__dna, qcparser_samtoolscountreads__ontarget__dna,  qcparser_samtoolscountreads__splicedreads__dna, qcparser_samtoolscountreads__longinsert__dna, qcparser_samtoolsidxstats__dna,qcparser_samtoolsstats__dna,qcparser_samtoolscountreads__ercc__dna, qcparser_erccreadcounts__dna

################## Final QC Merge TNA (DNA + RNA)
[qcreportmerger_cbind__tna]
    module = QCReportMerger
    submodule = Cbind
    docker_image = qcparser

    input_from = qcreportmerger_cbind__rna, qcreportmerger_cbind__dna

    final_output = qc_report

