[utils_consolidatesamplename__dna]
    module      = Utils
    submodule   = ConsolidateSampleName

[gatk_bedtointervallist__ontarget__dna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_bed
        ref             = ref

[gatk_bedtointervallist__ontargetexome__dna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_exonic_bed
        ref             = ref

################## EXOME GRAPH
[trimmomatic__dna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

[fastqc__trim__dna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__dna

    final_output    = R1_fastqc, R2_fastqc

[utils_getreadgroup__dna]
    module = Utils
    submodule = GetReadGroup

    input_from = trimmomatic__dna, utils_consolidatesamplename__dna

[star__dna]
    module          = Star
    docker_image    = star

    input_from      = trimmomatic__dna, utils_getreadgroup__dna

    final_output    = bam, transcriptome_mapped_bam, raw_read_counts, final_log

    [[args]]
        ref         = star_ref

[samtools_index__star__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = star__dna

    final_output    = bam_idx

[picard_markduplicates__dna]
    module          = Picard
    submodule       = MarkDuplicates
    docker_image    = picard

    input_from      = star__dna, samtools_index__star__dna

    final_output    = bam

[samtools_index__picard_markduplicates__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = picard_markduplicates__dna

    final_output    = bam_idx

[utils_getreadnames__spliced__dna]
    module          = Utils
    submodule       = GetReadNames
    docker_image    = bedsam

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna

    final_output    = read_names

    [[args]]
        spliced_reads = True

[gatk_filtersamreads__spliced__rna]
    module          = GATK
    submodule       = FilterSamReads
    docker_image    = gatk4

    input_from      = utils_getreadnames__spliced__dna, picard_markduplicates__dna

    final_output    = bam

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        exclude_reads   = True

[samtools_index__gatk_filtersamreads__spliced__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_filtersamreads__spliced__rna

    final_output    = bam_idx

[gatk_haplotypecaller__vcf__dna]
    module = GATK
    submodule = HaplotypeCaller
    docker_image = gatk4

    input_from = gatk_filtersamreads__spliced__rna, samtools_index__gatk_filtersamreads__spliced__dna, gatk_bedtointervallist__ontarget__dna

    final_output = vcf_gz, vcf_idx

    [[args]]
        gatk_version = 4
        ref = ref
        ref_dict = ref_dict
        ref_idx = ref_idx
        output_type = vcf

[utils_gunzipvcf__dna]

    module          = Utils
    submodule       = GunzipVCF
    docker_image    = gunzip

    input_from      = gatk_haplotypecaller__vcf__dna

    final_output    = vcf

[bcftools_bcftoolsnorm__dna]
    module = Bcftools
    submodule = BCFToolsNorm
    docker_image = bcftools

    input_from = utils_gunzipvcf__dna

    final_output = vcf

    [[args]]
        ref = ref

[annovar__dna]
    module          = Annovar

    input_from      = bcftools_bcftoolsnorm__dna

    final_output    = vcf

    [[args]]
        dbdir   = "/ref/annovar/humandb"
        operations = "g,r,f,f,f,f,f,f,f,f,f,f,f,f"
        protocol    = "refGene,genomicSuperDups,exac03,gnomad211_exome,gnomad30_genome,avsnp150,esp6500siv2_all,1000g2015aug_all,cosmic91_coding,cosmic91_noncoding,dbnsfp35a,cadd16gt10,nci60,clinvar_20200316"
        buildver = "hg38"

[utils_recodevcf__dna]
    module = Utils
    submodule = RecodeVCF
    docker_image = pipeline_tools

    input_from = annovar__dna

    final_output = recoded_vcf

    [[args]]
        nr_cpus = 8
        mem     = 30
