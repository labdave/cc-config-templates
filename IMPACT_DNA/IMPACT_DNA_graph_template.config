[utils_getrefchroms__dna]
    module      = Utils
    submodule   = GetRefChroms

[utils_consolidatesamplename__tna]
    module      = Utils
    submodule   = ConsolidateSampleName

[gatk_bedtointervallist__ontarget__dna]
    module       = GATK
    submodule    = BedToIntervalList
    docker_image = gatk4

    [[args]]
        gatk_version    = 4
        bed             = target_bed
        ref             = ref

[fastqc__raw__dna]
    module          = FastQC
    docker_image    = fastqc

    final_output    = R1_fastqc, R2_fastqc

        [[args]]
            mem     = 12

[trimmomatic__dna]
    module          = Trimmomatic
    docker_image    = trimmomatic

    final_output    = trim_report

    [[args]]
        MINLEN  = 25

[fastqc__trim__dna]
    module          = FastQC
    docker_image    = fastqc

    input_from      = trimmomatic__dna

    final_output    = R1_fastqc, R2_fastqc

        [[args]]
            mem     = 12

[utils_getreadgroup__dna]
    module      = Utils
    submodule   = GetReadGroup

    input_from  = trimmomatic__dna

[qcreportreader_getnumreadstrimmomatic__dna]
    module          = QCReportReader
    submodule       = GetNumReadsTrimmomatic

    input_from      = qcparser_trimmomatic__dna

    final_output    = nr_reads

[fastqsplitter__dna]
    module      = FastqSplitter

    input_from  = trimmomatic__dna, qcreportreader_getnumreadstrimmomatic__dna

    [[args]]
        read_len    = 150
        max_nr_cpus = 64

[bwaaligner__dna]
    module          = BwaAligner
    docker_image    = bwa

    input_from      = fastqsplitter__dna, trimmomatic__dna, utils_getreadgroup__dna

    [[args]]
        ref = ref

[samtools_index__bwaaligner__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = bwaaligner__dna

[mergebams__dna]
    module          = MergeBams
    docker_image    = samtools

    input_from      = bwaaligner__dna, samtools_index__bwaaligner__dna

[samtools_view__unmapped_reads__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__dna

    [[args]]
        include_flag = 4

[refsplitter__dna]
    module      = RefSplitter

    input_from  = mergebams__dna, utils_getrefchroms__dna

[samtools_view__subset_reads__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__dna, utils_getrefchroms__dna

[picard_markduplicates__dna]
    module          = Picard
    submodule       = MarkDuplicates
    docker_image    = picard

    input_from      = samtools_view__subset_reads__dna

[samtools_index__picard_markduplicates__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = picard_markduplicates__dna

[mergebams__picard_markduplicates__dna]
    module          = MergeBams
    docker_image    = samtools

    input_from      = picard_markduplicates__dna, samtools_index__picard_markduplicates__dna, samtools_view__unmapped_reads__dna

    final_output    = bam, bam_idx

[picard_downsamplesam__dna]
    module          = Picard
    submodule       = DownsampleSam
    docker_image    = picard

    input_from      = mergebams__picard_markduplicates__dna, qcreportreader_getnumreadstrimmomatic__dna

[samtools_index__picard_downsamplesam__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = picard_downsamplesam__dna

[gatk_baserecalibrator__dna]
    module          = GATK
    submodule       = BaseRecalibrator
    docker_image    = gatk4

    input_from      = picard_downsamplesam__dna, samtools_index__picard_downsamplesam__dna

    final_output    = BQSR_report

    [[args]]
        gatk_version = 4

[refsplitter__mergebams__picard_markduplicates__dna]
    module      = RefSplitter

    input_from  = utils_getrefchroms__dna

[gatk_applybqsr__dna]
    module          = GATK
    submodule       = ApplyBQSR
    docker_image    = gatk4

    input_from      = refsplitter__mergebams__picard_markduplicates__dna, gatk_baserecalibrator__dna

    [[args]]
        gatk_version = 4

[samtools_index__gatk_applybqsr__dna]
    module          = Samtools
    submodule       = Index
    docker_image    = samtools

    input_from      = gatk_applybqsr__dna

[gatk_haplotypecaller__vcf__dna]
    module          = GATK
    submodule       = HaplotypeCaller
    docker_image    = gatk4

    input_from      = gatk_applybqsr__dna, samtools_index__gatk_applybqsr__dna, gatk_bedtointervallist__ontarget__dna

    final_output    = vcf, vcf_idx

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        output_type     = vcf

[gatk_haplotypecaller__gvcf__dna]
    module          = GATK
    submodule       = HaplotypeCaller
    docker_image    = gatk4

    input_from      = gatk_applybqsr__dna, samtools_index__gatk_applybqsr__dna, gatk_bedtointervallist__ontarget__dna

    final_output    = gvcf, gvcf_idx

    [[args]]
        gatk_version    = 4
        ref             = ref
        ref_dict        = ref_dict
        ref_idx         = ref_idx
        output_type     = gvcf

[gatkmergers_catvariants__gatk_haplotypecaller__vcf__dna]
    module          = GATKMergers
    submodule       = CatVariants
    docker_image    = gatk3

    input_from      = gatk_haplotypecaller__vcf__dna

    final_output    = vcf, vcf_idx

    [[args]]
        gatk_version = 3

[gatkmergers_catvariants__gatk_haplotypecaller__gvcf__dna]
    module          = GATKMergers
    submodule       = CatVariants
    docker_image    = gatk3

    input_from      = gatk_haplotypecaller__gvcf__dna

    final_output    = gvcf, gvcf_idx

    [[args]]
        gatk_version = 3

[bcftools_bcftoolsnorm__dna]
    module          = Bcftools
    submodule       = BCFToolsNorm
    docker_image    = bcftools

    input_from      = gatkmergers_catvariants__gatk_haplotypecaller__vcf__dna

    final_output    = vcf

    [[args]]
        ref = ref

[annovar__dna]
    module          = Annovar

    input_from      = bcftools_bcftoolsnorm__dna

    final_output    = vcf

    [[args]]
        dbdir       = "/ref/annovar/humandb"
        operations  = "g,r,f,f,f,f,f,f,f,f,f,f,f,f"
        protocol    = "refGene,genomicSuperDups,exac03,gnomad_exome,gnomad_genome,avsnp150,esp6500siv2_all,1000g2015aug_all,cosmic87_coding,cosmic87_noncoding,dbnsfp35a,cadd14gt10,nci60,clinvar_20180603"
        buildver    = "hg38"

# QC
[samtools_flagstat__dna]
    module          =  Samtools
    submodule       = Flagstat
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    final_output    = flagstat

[picard_collectinsertsizematrics__dna]
    module          = Picard
    submodule       = CollectInsertSizeMetrics
    docker_image    = picard

    input_from      = mergebams__picard_markduplicates__dna

    final_output    = insert_size_report, insert_size_histogram

[samtools_view__countreads__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__exonoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = exonic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intronoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = intron_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__intergenicoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = intergenic_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__utroverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = utr_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__mirnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = mirna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__rrnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = rrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__lincrnaoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = lincrna_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[samtools_view__ontargetoverlap__dna]
    module          = Samtools
    submodule       = View
    docker_image    = samtools

    input_from      = mergebams__picard_markduplicates__dna

    [[args]]
        bed             = target_bed
        count_reads     = True
        exclude_flag    = 3332 # exclude unmapped,secondary aligned,pcr dups,suppl alignment

[gatk_depthofcoverage__ontargetcoverage__dna]
    module       = GATK
    submodule    = DepthOfCoverage
    docker_image = gatk3

    input_from   = mergebams__picard_markduplicates__dna

    final_output = interval_summary, interval_statistics, sample_summary, sample_statistics, cumulative_coverage_counts, cumulative_coverage_proportions

    [[args]]
        gatk_version = 3
        ref          = ref
        ref_dict     = ref_dict
        ref_idx      = ref_idx
        nr_cpus      = 16
        mem          = 64

###### DNA Section QCParser
[qcparser_fastqc__rawfastqc__dna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__raw__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna fastqc report parsing for raw fastqs"

[qcparser_fastqc__trimfastqc__dna]
    module          = QCParser
    submodule       = FastQC
    docker_image    = qcparser

    input_from      = fastqc__trim__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna fastqc report parsing for trimmed fastqs"

[qcparser_trimmomatic__dna]
    module          = QCParser
    submodule       = Trimmomatic
    docker_image    = qcparser

    input_from      = trimmomatic__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna trimmomatic summary report parsing"

[qcparser_samtoolsflagstat__dna]
    module          = QCParser
    submodule       = SamtoolsFlagstat
    docker_image    = qcparser

    input_from      = samtools_flagstat__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna star alignment summary report parsing"

[qcparser_picardinsertsizematrics__dna]
    module          = QCParser
    submodule       = PicardInsertMetrics
    docker_image    = qcparser

    input_from      = picard_collectinsertsizematrics__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna picard insert size summary report parsing"

[qcparser_samtoolscountreads__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__countreads__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna read counts mapped to the genome"

[qcparser_samtoolscountreads__ontarget__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__ontargetoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna on target read counts mapped to the genome"

[qcparser_samtoolscountreads__exon__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__exonoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna exon read counts mapped to the genome"

[qcparser_samtoolscountreads__intron__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intronoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna intron read counts mapped to the genome"

[qcparser_samtoolscountreads__intergenic__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__intergenicoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna intergenic read counts mapped to the genome"

[qcparser_samtoolscountreads__utr__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__utroverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna utr read counts mapped to the genome"

[qcparser_samtoolscountreads__mirna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__mirnaoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna miRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__rrna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__rrnaoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna rRNA read counts mapped to the genome"

[qcparser_samtoolscountreads__lincrna__dna]
    module          = QCParser
    submodule       = SamtoolsCountReads
    docker_image    = qcparser

    input_from      = samtools_view__lincrnaoverlap__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna lincRNA read counts mapped to the genome"

[qcparser_docsamplesummarystats__dna]
    module          = QCParser
    submodule       = DOCSampleSummaryStats
    docker_image    = qcparser

    input_from      = gatk_depthofcoverage__ontargetcoverage__dna, utils_consolidatesamplename__tna

    [[args]]
        note = "dna on target depth of coverage stats"

[qcreportmerger_cbind__dna]
    module          = QCReportMerger
    submodule       = Cbind
    docker_image    = qcparser

    input_from      = qcparser_fastqc__rawfastqc__dna, qcparser_fastqc__trimfastqc__dna, qcparser_trimmomatic__dna, qcparser_samtoolsflagstat__dna, qcparser_picardinsertsizematrics__dna, qcparser_samtoolscountreads__exon__dna, qcparser_samtoolscountreads__intron__dna, qcparser_samtoolscountreads__intergenic__dna, qcparser_samtoolscountreads__utr__dna, qcparser_samtoolscountreads__mirna__dna, qcparser_samtoolscountreads__rrna__dna, qcparser_samtoolscountreads__lincrna__dna, qcparser_docsamplesummarystats__dna, qcparser_samtoolscountreads__dna, qcparser_samtoolscountreads__ontarget__dna

    final_output    = qc_report
